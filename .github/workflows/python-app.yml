# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  usl_lib:
    name: usl_lib CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      # Use the combined requirements.txt from the gen_requirements_txt.sh script
      # to ensure the library works with the union of cloud_function and upload_map's
      # requirements.
      run: |
        sudo apt-get update -qq
        sudo add-apt-repository ppa:ubuntugis/ppa -y
        sudo apt-get update -qq
        sudo apt-get install -y gdal-bin libgdal-dev
        python -m pip install --upgrade pip
        cd usl_pipeline
        pip install -r requirements.txt
        pip install -e usl_lib[dev]
    - name: Lint with flake8
      run: |
        flake8 usl_pipeline/usl_lib --show-source --statistics
    - name: Ensure black auto-formatter has run
      run: |
        black usl_pipeline/usl_lib --check
    - name: Test with pytest
      run: |
        pytest usl_pipeline/usl_lib

  map_uploader:
    name: Map Uploader CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo add-apt-repository ppa:ubuntugis/ppa -y
        sudo apt-get update -qq
        sudo apt-get install -y gdal-bin libgdal-dev
        python -m pip install --upgrade pip
        cd usl_pipeline/map_uploader
        pip install -r requirements.txt
        pip install -e .[dev]
    - name: Lint with flake8
      run: |
        flake8 usl_pipeline/map_uploader --show-source --statistics
    - name: Ensure black auto-formatter has run
      run: |
        black usl_pipeline/map_uploader --check
    - name: Test with pytest
      run: |
        pytest usl_pipeline/map_uploader

  cloud_functions:
    name: Cloud Funcations CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      # Copy the usl_lib files to sit alongside main.py to mirror the .zip we
      # will use for the cloud function.
      run: |
        python -m pip install --upgrade pip
        pip install -r usl_pipeline/cloud_functions/requirements.txt
        cp -r usl_pipeline/usl_lib/usl_lib usl_pipeline/cloud_functions
        pip install black~=24.0 flake8~=7.0 flake8-docstrings~=1.7 pytest~=8.0
    - name: Lint with flake8
      run: |
        flake8 usl_pipeline/cloud_functions --show-source --statistics
    - name: Ensure black auto-formatter has run
      run: |
        black usl_pipeline/cloud_functions --check
    - name: Test with pytest
      run: |
        pytest usl_pipeline/cloud_functions

  consistent_requirements:
    name: Ensure Consistent Requirements
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Ensure Consistent Requirements
      run: |
        cd usl_pipeline
        cp requirements.txt requirements.txt.orig
        ./gen_requirements_txt.sh
        echo 'Ensuring gen_requirements_txt.sh has been run.'
        echo 'If this fails, run gen_requirements_txt.sh and commit its changes.'
        diff requirements.txt requirements.txt.orig
        echo 'Ensuring requirements.txt can be installed.'
        echo 'If this fails, ensure the cloud_functions and map_uploader do not require different versions of the same package.'
        sudo apt-get update -qq
        sudo add-apt-repository ppa:ubuntugis/ppa -y
        sudo apt-get update -qq
        sudo apt-get install -y gdal-bin libgdal-dev
        pip install -r requirements.txt

  type_checking:
    # We run type checking against all the different packages together
    # so MyPy can access the type definitions of shared library code
    # while checking another package.
    name: Type Checking from MyPy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo add-apt-repository ppa:ubuntugis/ppa -y
        sudo apt-get update -qq
        sudo apt-get install -y gdal-bin libgdal-dev
        python -m pip install --upgrade pip
        cd usl_pipeline
        pip install -r requirements.txt
        pip install -e usl_lib[dev] -e map_uploader[dev]
    - name: MyPy
      run: |
        mypy usl_pipeline

  usl_models:
    name: USL Models CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd usl_models
        pip install -r requirements.txt
        pip install -e .[dev]
    - name: Lint with flake8
      run: |
        flake8 usl_models --show-source --statistics
    - name: Ensure black auto-formatter has run
      run: |
        black usl_models --check
    - name: Test with pytest
      run: |
        pytest usl_models
    - name: Type check with MyPy
      run: |
        mypy usl_models